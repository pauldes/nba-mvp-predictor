name: predict
# TODO :
# Once season is over, stop predicting every day.
# Renew all artifacts every week until the next season
# Merge with renewer with an env variable SEASON_IS_OVER in the CI could be a solution.
on:
  schedule:
    - cron:  '0 8 * * *' # Everyday at 8UTC
  workflow_dispatch: # Allow for manual trigger from github.com
env:
  LOG_LEVEL: INFO
jobs:
  make-predictions:
    runs-on: ubuntu-latest
    steps:
      - name: Setup timezone to Europe/Paris
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Europe/Paris
      - name: Check out to repo
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Download features from artifact
        uses: aochmann/actions-download-artifact@master
        with:
          name: features.json
          latest: true
          path: ./data/
      - name: Download model from artifact
        uses: aochmann/actions-download-artifact@master
        with:
          name: model.joblib
          latest: true
          path: ./data/
      - name: Download history from artifact
        uses: aochmann/actions-download-artifact@master
        with:
          name: history.csv
          latest: true
          path: ./data/
      - name: Install dependencies from Pipfile
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
          pipenv install --deploy
      - name: Run the CLI command to download data for season 2022
        run: |
          pipenv run python . download --season 2021 2022
      - name: Run the CLI command to predict model
        run: |
          pipenv run python . predict
      - name: Upload predictions as artifact
        uses: actions/upload-artifact@v2
        with: 
          name: predictions.csv
          path: ./data/predictions.csv
          retention-days: 10
      # - name: Upload history as artifact
      #   uses: actions/upload-artifact@v2
      #   with: 
      #     name: history.csv
      #     path: ./data/history.csv
      #     retention-days: 10
      - name: Upload model input dataset as artifact
        uses: actions/upload-artifact@v2
        with: 
          name: model_input.csv
          path: ./data/model_input.csv
          retention-days: 10
      